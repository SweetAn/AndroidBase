com.commons.support.db.config.Config -> com.commons.support.db.config.a:
    java.lang.Long id -> a
    java.lang.String key -> b
    java.lang.String value -> c
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.Long) -> <init>
    void <init>(java.lang.Long,java.lang.String,java.lang.String) -> <init>
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
com.commons.support.db.config.ConfigDao -> com.commons.support.db.config.ConfigDao:
    java.lang.String TABLENAME -> TABLENAME
    void <init>(de.greenrobot.dao.internal.DaoConfig) -> <init>
    void <init>(de.greenrobot.dao.internal.DaoConfig,com.commons.support.db.config.DaoSession) -> <init>
    void createTable(android.database.sqlite.SQLiteDatabase,boolean) -> createTable
    void dropTable(android.database.sqlite.SQLiteDatabase,boolean) -> dropTable
    void bindValues(android.database.sqlite.SQLiteStatement,com.commons.support.db.config.Config) -> a
    java.lang.Long readKey(android.database.Cursor,int) -> readKey
    com.commons.support.db.config.Config readEntity(android.database.Cursor,int) -> readEntity
    void readEntity(android.database.Cursor,com.commons.support.db.config.Config,int) -> readEntity
    java.lang.Long updateKeyAfterInsert(com.commons.support.db.config.Config,long) -> a
    java.lang.Long getKey(com.commons.support.db.config.Config) -> getKey
    boolean isEntityUpdateable() -> isEntityUpdateable
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object updateKeyAfterInsert(java.lang.Object,long) -> updateKeyAfterInsert
    void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object) -> bindValues
    void readEntity(android.database.Cursor,java.lang.Object,int) -> readEntity
    java.lang.Object readKey(android.database.Cursor,int) -> readKey
    java.lang.Object readEntity(android.database.Cursor,int) -> readEntity
com.commons.support.db.config.ConfigDao$Properties -> com.commons.support.db.config.ConfigDao$Properties:
    de.greenrobot.dao.Property Id -> a
    de.greenrobot.dao.Property Key -> b
    de.greenrobot.dao.Property Value -> c
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.commons.support.db.config.DaoSession -> com.commons.support.db.config.b:
    de.greenrobot.dao.internal.DaoConfig configDaoConfig -> a
    com.commons.support.db.config.ConfigDao configDao -> b
    void <init>(android.database.sqlite.SQLiteDatabase,de.greenrobot.dao.identityscope.IdentityScopeType,java.util.Map) -> <init>
    void clear() -> clear
    com.commons.support.db.config.ConfigDao getConfigDao() -> getConfigDao
com.commons.support.log.LogUtil -> com.commons.support.log.a:
    void <init>() -> <init>
    void log(java.lang.String) -> log
    void error(java.lang.String) -> error
com.commons.support.widget.CircleImageView -> com.commons.support.widget.CircleImageView:
    android.widget.ImageView$ScaleType SCALE_TYPE -> a
    android.graphics.Bitmap$Config BITMAP_CONFIG -> b
    android.graphics.RectF mDrawableRect -> c
    android.graphics.RectF mBorderRect -> d
    android.graphics.Matrix mShaderMatrix -> e
    android.graphics.Paint mBitmapPaint -> f
    android.graphics.Paint mBorderPaint -> g
    int mBorderColor -> h
    int mBorderWidth -> i
    android.graphics.Bitmap mBitmap -> j
    android.graphics.BitmapShader mBitmapShader -> k
    int mBitmapWidth -> l
    int mBitmapHeight -> m
    float mDrawableRadius -> n
    float mBorderRadius -> o
    boolean mReady -> p
    boolean mSetupPending -> q
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int getBorderColor() -> getBorderColor
    void setBorderColor(int) -> setBorderColor
    int getBorderWidth() -> getBorderWidth
    void setBorderWidth(int) -> setBorderWidth
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.Drawable) -> a
    void setup() -> a
    void updateShaderMatrix() -> b
    void <clinit>() -> <clinit>
com.commons.support.widget.HorizontalListView -> com.commons.support.widget.HorizontalListView:
    android.widget.Scroller mFlingTracker -> a
    com.commons.support.widget.HorizontalListView$GestureListener mGestureListener -> e
    android.view.GestureDetector mGestureDetector -> f
    int mDisplayOffset -> g
    android.widget.ListAdapter mAdapter -> b
    java.util.List mRemovedViewsCache -> h
    boolean mDataChanged -> i
    android.graphics.Rect mRect -> j
    android.view.View mViewBeingTouched -> k
    int mDividerWidth -> l
    android.graphics.drawable.Drawable mDivider -> m
    int mCurrentX -> c
    int mNextX -> d
    java.lang.Integer mRestoreX -> n
    int mMaxX -> o
    int mLeftViewAdapterIndex -> p
    int mRightViewAdapterIndex -> q
    int mCurrentlySelectedAdapterIndex -> r
    com.commons.support.widget.HorizontalListView$RunningOutOfDataListener mRunningOutOfDataListener -> s
    int mRunningOutOfDataThreshold -> t
    boolean mHasNotifiedRunningLowOnData -> u
    com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener mOnScrollStateChangedListener -> v
    com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState mCurrentScrollState -> w
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowLeft -> x
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowRight -> y
    int mHeightMeasureSpec -> z
    boolean mBlockTouchAction -> A
    boolean mIsParentVerticiallyScrollableViewDisallowingInterceptTouchEvent -> B
    android.view.View$OnClickListener mOnClickListener -> C
    android.database.DataSetObserver mAdapterDataObserver -> D
    java.lang.Runnable mDelayedLayout -> E
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void bindGestureDetector() -> a
    void requestParentListViewToNotInterceptTouchEvents(java.lang.Boolean) -> a
    void retrieveXmlConfiguration(android.content.Context,android.util.AttributeSet) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    void setDividerWidth(int) -> setDividerWidth
    void initView() -> b
    void reset() -> c
    void setSelection(int) -> setSelection
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    android.widget.ListAdapter getAdapter() -> getAdapter
    void initializeRecycledViewCache(int) -> a
    android.view.View getRecycledView(int) -> b
    void recycleView(int,android.view.View) -> a
    boolean isItemViewTypeValid(int) -> c
    void addAndMeasureChild(android.view.View,int) -> a
    void measureChild(android.view.View) -> a
    android.view.ViewGroup$LayoutParams getLayoutParams(android.view.View) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    float getLeftFadingEdgeStrength() -> getLeftFadingEdgeStrength
    float getRightFadingEdgeStrength() -> getRightFadingEdgeStrength
    float determineFlingAbsorbVelocity() -> d
    void onMeasure(int,int) -> onMeasure
    boolean determineMaxX() -> e
    void fillList(int) -> d
    void removeNonVisibleChildren(int) -> e
    void fillListRight(int,int) -> a
    void fillListLeft(int,int) -> b
    void positionChildren(int) -> f
    android.view.View getLeftmostChild() -> getLeftmostChild
    android.view.View getRightmostChild() -> getRightmostChild
    android.view.View getChild(int) -> g
    int getChildIndex(int,int) -> c
    boolean isLastItemInAdapter(int) -> h
    int getRenderHeight() -> getRenderHeight
    int getRenderWidth() -> getRenderWidth
    void scrollTo(int) -> scrollTo
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void drawEdgeGlow(android.graphics.Canvas) -> a
    void drawDividers(android.graphics.Canvas) -> b
    void drawDivider(android.graphics.Canvas,android.graphics.Rect) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void dispatchSetPressed(boolean) -> dispatchSetPressed
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    boolean onDown(android.view.MotionEvent) -> a
    void unpressTouchedChild() -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void releaseEdgeGlow() -> g
    void setRunningOutOfDataListener(com.commons.support.widget.HorizontalListView$RunningOutOfDataListener,int) -> setRunningOutOfDataListener
    void determineIfLowOnData() -> h
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setOnScrollStateChangedListener(com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener) -> setOnScrollStateChangedListener
    void setCurrentScrollState(com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState) -> setCurrentScrollState
    void updateOverscrollAnimation(int) -> i
    boolean isEdgeGlowEnabled() -> i
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    android.view.GestureDetector access$100(com.commons.support.widget.HorizontalListView) -> a
    boolean access$202(com.commons.support.widget.HorizontalListView,boolean) -> a
    boolean access$302(com.commons.support.widget.HorizontalListView,boolean) -> b
    void access$400(com.commons.support.widget.HorizontalListView) -> b
    void access$500(com.commons.support.widget.HorizontalListView) -> c
    void access$600(com.commons.support.widget.HorizontalListView,java.lang.Boolean) -> a
    void access$700(com.commons.support.widget.HorizontalListView,com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState) -> a
    void access$800(com.commons.support.widget.HorizontalListView,int) -> a
    int access$900(com.commons.support.widget.HorizontalListView,int,int) -> a
    boolean access$1000(com.commons.support.widget.HorizontalListView) -> d
    int access$1100(com.commons.support.widget.HorizontalListView) -> e
    android.view.View$OnClickListener access$1200(com.commons.support.widget.HorizontalListView) -> f
com.commons.support.widget.HorizontalListView$1 -> com.commons.support.widget.a:
    com.commons.support.widget.HorizontalListView this$0 -> a
    void <init>(com.commons.support.widget.HorizontalListView) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.commons.support.widget.HorizontalListView$2 -> com.commons.support.widget.b:
    com.commons.support.widget.HorizontalListView this$0 -> a
    void <init>(com.commons.support.widget.HorizontalListView) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.commons.support.widget.HorizontalListView$3 -> com.commons.support.widget.c:
    com.commons.support.widget.HorizontalListView this$0 -> a
    void <init>(com.commons.support.widget.HorizontalListView) -> <init>
    void run() -> run
com.commons.support.widget.HorizontalListView$GestureListener -> com.commons.support.widget.d:
    com.commons.support.widget.HorizontalListView this$0 -> a
    void <init>(com.commons.support.widget.HorizontalListView) -> <init>
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    void onLongPress(android.view.MotionEvent) -> onLongPress
    void <init>(com.commons.support.widget.HorizontalListView,com.commons.support.widget.HorizontalListView$1) -> <init>
com.commons.support.widget.HorizontalListView$HoneycombPlus -> com.commons.support.widget.e:
    void setFriction(android.widget.Scroller,float) -> setFriction
    void <clinit>() -> <clinit>
com.commons.support.widget.HorizontalListView$IceCreamSandwichPlus -> com.commons.support.widget.f:
    float getCurrVelocity(android.widget.Scroller) -> getCurrVelocity
    void <clinit>() -> <clinit>
com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener -> com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener:
    void onScrollStateChanged(com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState) -> onScrollStateChanged
com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState -> com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState:
    com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState SCROLL_STATE_TOUCH_SCROLL -> SCROLL_STATE_TOUCH_SCROLL
    com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState SCROLL_STATE_FLING -> SCROLL_STATE_FLING
    com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState[] $VALUES -> a
    com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState[] values() -> values
    com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.commons.support.widget.HorizontalListView$RunningOutOfDataListener -> com.commons.support.widget.g:
    void onRunningOutOfData() -> onRunningOutOfData
com.commons.support.widget.NumberProgressBar -> com.commons.support.widget.NumberProgressBar:
    android.content.Context mContext -> a
    int mMax -> b
    int mProgress -> c
    int mReachedBarColor -> d
    int mUnreachedBarColor -> e
    int mTextColor -> f
    float mTextSize -> g
    float mReachedBarHeight -> h
    float mUnreachedBarHeight -> i
    int default_text_color -> j
    int default_reached_color -> k
    int default_unreached_color -> l
    float default_progress_text_offset -> m
    float default_text_size -> n
    float default_reached_bar_height -> o
    float default_unreached_bar_height -> p
    float mDrawTextWidth -> q
    float mDrawTextStart -> r
    float mDrawTextEnd -> s
    java.lang.String mCurrentDrawText -> t
    android.graphics.Paint mReachedBarPaint -> u
    android.graphics.Paint mUnreachedBarPaint -> v
    android.graphics.Paint mTextPaint -> w
    android.graphics.RectF mUnreachedRectF -> x
    android.graphics.RectF mReachedRectF -> y
    float mOffset -> z
    boolean mDrawUnreachedBar -> A
    boolean mDrawReachedBar -> B
    boolean mIfDrawText -> C
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    void onMeasure(int,int) -> onMeasure
    int measure(int,boolean) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void initializePainters() -> a
    void calculateDrawRectFWithoutProgressText() -> b
    void calculateDrawRectF() -> c
    int getTextColor() -> getTextColor
    float getProgressTextSize() -> getProgressTextSize
    int getUnreachedBarColor() -> getUnreachedBarColor
    int getReachedBarColor() -> getReachedBarColor
    int getProgress() -> getProgress
    int getMax() -> getMax
    float getReachedBarHeight() -> getReachedBarHeight
    float getUnreachedBarHeight() -> getUnreachedBarHeight
    void setProgressTextSize(float) -> setProgressTextSize
    void setProgressTextColor(int) -> setProgressTextColor
    void setUnreachedBarColor(int) -> setUnreachedBarColor
    void setReachedBarColor(int) -> setReachedBarColor
    void setMax(int) -> setMax
    void incrementProgressBy(int) -> incrementProgressBy
    void setProgress(int) -> setProgress
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    float dp2px(float) -> dp2px
    float sp2px(float) -> sp2px
    void setProgressTextVisibility(com.commons.support.widget.NumberProgressBar$ProgressTextVisibility) -> setProgressTextVisibility
com.commons.support.widget.NumberProgressBar$ProgressTextVisibility -> com.commons.support.widget.NumberProgressBar$ProgressTextVisibility:
    com.commons.support.widget.NumberProgressBar$ProgressTextVisibility Visible -> Visible
    com.commons.support.widget.NumberProgressBar$ProgressTextVisibility Invisible -> Invisible
    com.commons.support.widget.NumberProgressBar$ProgressTextVisibility[] $VALUES -> a
    com.commons.support.widget.NumberProgressBar$ProgressTextVisibility[] values() -> values
    com.commons.support.widget.NumberProgressBar$ProgressTextVisibility valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.commons.support.widget.ProgressBarCircular -> com.commons.support.widget.ProgressBarCircular:
    int backgroundColor -> a
    float radius1 -> b
    float radius2 -> c
    int cont -> d
    boolean firstAnimationOver -> e
    int arcD -> f
    int arcO -> g
    float rotateAngle -> h
    int limite -> i
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int dpToPx(float,android.content.res.Resources) -> dpToPx
    void setAttributes(android.util.AttributeSet) -> setAttributes
    int makePressColor() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawFirstAnimation(android.graphics.Canvas) -> a
    void drawSecondAnimation(android.graphics.Canvas) -> b
    void setBackgroundColor(int) -> setBackgroundColor
com.commons.support.widget.TitleBar -> com.commons.support.widget.TitleBar:
    android.widget.ImageView leftButton -> b
    android.widget.ImageView rightButton -> c
    android.widget.TextView tvTitle -> d
    android.widget.TextView tvRightButton -> e
    android.widget.ImageView redDot -> a
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setLeftButton(int,android.view.View$OnClickListener) -> setLeftButton
    void setLeftButton(android.view.View$OnClickListener) -> setLeftButton
    void setRightButton(int,android.view.View$OnClickListener) -> setRightButton
    void setRightButton(java.lang.String,android.view.View$OnClickListener) -> setRightButton
    void setTitle(java.lang.String) -> setTitle
    void showLeftButton(boolean) -> showLeftButton
    void showRedDot(boolean) -> showRedDot
    void showRightButton(boolean) -> showRightButton
    void showTvRightButton(boolean) -> showTvRightButton
com.commons.support.widget.TitleBar$1 -> com.commons.support.widget.h:
    android.content.Context val$context -> a
    com.commons.support.widget.TitleBar this$0 -> b
    void <init>(com.commons.support.widget.TitleBar,android.content.Context) -> <init>
    void onClick(android.view.View) -> onClick
