com.commons.support.BuildConfig: BuildConfig()
com.commons.support.db.config.Config: Config()
com.commons.support.db.config.Config: Config(java.lang.String,java.lang.String)
com.commons.support.db.config.Config: Config(java.lang.Long)
com.commons.support.db.config.Config: Config(java.lang.Long,java.lang.String,java.lang.String)
com.commons.support.db.config.Config: java.lang.Long getId()
com.commons.support.db.config.Config: void setId(java.lang.Long)
com.commons.support.db.config.Config: java.lang.String getKey()
com.commons.support.db.config.Config: void setKey(java.lang.String)
com.commons.support.db.config.Config: java.lang.String getValue()
com.commons.support.db.config.Config: void setValue(java.lang.String)
com.commons.support.db.config.ConfigDao: java.lang.String TABLENAME
com.commons.support.db.config.ConfigDao: ConfigDao(de.greenrobot.dao.internal.DaoConfig)
com.commons.support.db.config.ConfigDao: ConfigDao(de.greenrobot.dao.internal.DaoConfig,com.commons.support.db.config.DaoSession)
com.commons.support.db.config.ConfigDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)
com.commons.support.db.config.ConfigDao: void dropTable(android.database.sqlite.SQLiteDatabase,boolean)
com.commons.support.db.config.ConfigDao: java.lang.Long readKey(android.database.Cursor,int)
com.commons.support.db.config.ConfigDao: com.commons.support.db.config.Config readEntity(android.database.Cursor,int)
com.commons.support.db.config.ConfigDao: void readEntity(android.database.Cursor,com.commons.support.db.config.Config,int)
com.commons.support.db.config.ConfigDao: java.lang.Long getKey(com.commons.support.db.config.Config)
com.commons.support.db.config.ConfigDao: java.lang.Object getKey(java.lang.Object)
com.commons.support.db.config.ConfigDao: void readEntity(android.database.Cursor,java.lang.Object,int)
com.commons.support.db.config.ConfigDao: java.lang.Object readKey(android.database.Cursor,int)
com.commons.support.db.config.ConfigDao: java.lang.Object readEntity(android.database.Cursor,int)
com.commons.support.db.config.ConfigDao$Properties
com.commons.support.db.config.ConfigDao$Properties: ConfigDao$Properties()
com.commons.support.db.config.ConfigUtil: ConfigUtil()
com.commons.support.db.config.ConfigUtil: void init(android.content.Context)
com.commons.support.db.config.ConfigUtil: com.commons.support.db.config.DaoMaster getDaoMaster(android.content.Context)
com.commons.support.db.config.ConfigUtil: com.commons.support.db.config.DaoSession getDaoSession(android.content.Context)
com.commons.support.db.config.ConfigUtil: void save(com.commons.support.db.config.Config)
com.commons.support.db.config.ConfigUtil: com.commons.support.db.config.Config getConfig(java.lang.String)
com.commons.support.db.config.ConfigUtil: java.lang.String getConfigValue(java.lang.String)
com.commons.support.db.config.ConfigUtil: void deleteAll()
com.commons.support.db.config.ConfigUtil: void delete(java.lang.String)
com.commons.support.db.config.ConfigUtil: boolean exist(java.lang.String)
com.commons.support.db.config.DaoMaster: void createAllTables(android.database.sqlite.SQLiteDatabase,boolean)
com.commons.support.db.config.DaoMaster: void dropAllTables(android.database.sqlite.SQLiteDatabase,boolean)
com.commons.support.db.config.DaoMaster: DaoMaster(android.database.sqlite.SQLiteDatabase)
com.commons.support.db.config.DaoMaster: com.commons.support.db.config.DaoSession newSession()
com.commons.support.db.config.DaoMaster: com.commons.support.db.config.DaoSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType)
com.commons.support.db.config.DaoMaster: de.greenrobot.dao.AbstractDaoSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType)
com.commons.support.db.config.DaoMaster: de.greenrobot.dao.AbstractDaoSession newSession()
com.commons.support.db.config.DaoMaster$DevOpenHelper: DaoMaster$DevOpenHelper(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)
com.commons.support.db.config.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.commons.support.db.config.DaoMaster$OpenHelper: DaoMaster$OpenHelper(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)
com.commons.support.db.config.DaoMaster$OpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)
com.commons.support.db.config.DaoSession: DaoSession(android.database.sqlite.SQLiteDatabase,de.greenrobot.dao.identityscope.IdentityScopeType,java.util.Map)
com.commons.support.db.config.DaoSession: void clear()
com.commons.support.db.config.DaoSession: com.commons.support.db.config.ConfigDao getConfigDao()
com.commons.support.entity.Result: Result()
com.commons.support.entity.Result: java.lang.String getDataStr(java.lang.String)
com.commons.support.entity.Result: int getDataInt(java.lang.String)
com.commons.support.entity.Result: boolean isResult()
com.commons.support.entity.Result: void setResult(boolean)
com.commons.support.entity.Result: java.lang.String getMsg()
com.commons.support.entity.Result: void setMsg(java.lang.String)
com.commons.support.entity.Result: java.lang.String getErrorMsg()
com.commons.support.entity.Result: void setErrorMsg(java.lang.String)
com.commons.support.entity.Result: java.lang.String getData()
com.commons.support.entity.Result: void setData(java.lang.String)
com.commons.support.entity.Result: java.lang.String getResultCode()
com.commons.support.entity.Result: void setResultCode(java.lang.String)
com.commons.support.http.HttpHelper: HttpHelper()
com.commons.support.http.HttpHelper: com.commons.support.http.HttpHelper getInstance(android.content.Context)
com.commons.support.http.HttpHelper: com.loopj.android.http.AsyncHttpClient getClient()
com.commons.support.http.HttpHelper: void get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler)
com.commons.support.http.HttpHelper: void cancelAllRequests()
com.commons.support.img.ImageLoadListener: ImageLoadListener()
com.commons.support.img.ImageLoadListener: void onLoadingStarted(java.lang.String,android.view.View)
com.commons.support.img.ImageLoadListener: void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason)
com.commons.support.img.ImageLoadListener: void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap)
com.commons.support.img.ImageLoadListener: void onLoadingCancelled(java.lang.String,android.view.View)
com.commons.support.img.ImageLoader: ImageLoader()
com.commons.support.img.ImageLoader: void init(android.content.Context)
com.commons.support.img.ImageLoader: void loadImage(java.lang.String,android.widget.ImageView)
com.commons.support.img.ImageLoader: void loadImage(java.lang.String,android.widget.ImageView,com.commons.support.img.ImageLoadListener)
com.commons.support.img.ImageLoader$1: void onLoadingStarted(java.lang.String,android.view.View)
com.commons.support.img.ImageLoader$1: void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason)
com.commons.support.img.ImageLoader$1: void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap)
com.commons.support.img.ImageLoader$1: void onLoadingCancelled(java.lang.String,android.view.View)
com.commons.support.log.LogUtil: LogUtil()
com.commons.support.log.LogUtil: void log(java.lang.String)
com.commons.support.log.LogUtil: void error(java.lang.String)
com.commons.support.util.DeviceUtil: DeviceUtil(android.content.Context)
com.commons.support.util.DeviceUtil: int getDeviceWidth(android.content.Context)
com.commons.support.util.DeviceUtil: int getDeviceHeight(android.content.Context)
com.commons.support.util.DeviceUtil: java.lang.String getManufacturer()
com.commons.support.util.DeviceUtil: java.lang.String getModel()
com.commons.support.util.DeviceUtil: java.lang.String getReleaseVersion()
com.commons.support.util.DeviceUtil: java.lang.String getSdkVersion()
com.commons.support.util.DeviceUtil: int getDisplayWidth()
com.commons.support.util.DeviceUtil: int getDisplayHeight()
com.commons.support.util.DeviceUtil: java.lang.String getDeviceId()
com.commons.support.util.DeviceUtil: java.lang.String getNetworkOperatorName()
com.commons.support.util.DeviceUtil: java.lang.String getNetworkOperator()
com.commons.support.util.DeviceUtil: java.lang.String getNetworkCountryISO()
com.commons.support.util.DeviceUtil: java.lang.String getSimOperator()
com.commons.support.util.DeviceUtil: java.lang.String getSimCountryISO()
com.commons.support.util.DeviceUtil: java.lang.String getSimSerialNumber()
com.commons.support.util.DeviceUtil: java.lang.String getSubscriberId()
com.commons.support.util.DeviceUtil: java.lang.String getLocalMacAddress()
com.commons.support.util.DeviceUtil: java.lang.String buildUUID()
com.commons.support.util.DeviceUtil: java.lang.String getAndroidId()
com.commons.support.util.DeviceUtil: void setAndroidId(java.lang.String)
com.commons.support.util.DeviceUtil: java.lang.String toString()
com.commons.support.util.DeviceUtil: int getDpi()
com.commons.support.util.DeviceUtil: void setDpi(int)
com.commons.support.util.DialogUtil: DialogUtil()
com.commons.support.util.DialogUtil: android.app.AlertDialog createAlertConfirmDialog(android.content.Context,java.lang.String,android.content.DialogInterface$OnClickListener)
com.commons.support.util.DialogUtil: android.app.AlertDialog createAlertInfoDialog(android.content.Context,java.lang.String,java.lang.String)
com.commons.support.util.DialogUtil: android.app.Dialog createWaitingResultDialog(android.content.Context,java.lang.String)
com.commons.support.util.DialogUtil: void createTipDialog(android.content.Context,java.lang.String,java.lang.String)
com.commons.support.util.DialogUtil: android.app.Dialog createTipDialog(android.content.Context,java.lang.String,java.lang.String,android.view.View$OnClickListener)
com.commons.support.util.DialogUtil: android.app.Dialog createLoadingDialog(android.content.Context,java.lang.String)
com.commons.support.util.DialogUtil$1: void onClick(android.content.DialogInterface,int)
com.commons.support.util.DialogUtil$2: void onClick(android.content.DialogInterface,int)
com.commons.support.util.DialogUtil$3: void onClick(android.view.View)
com.commons.support.util.EncryptionUtil: EncryptionUtil()
com.commons.support.util.EncryptionUtil: java.lang.String MD5(java.lang.String)
com.commons.support.util.EncryptionUtil: byte[] encryptSHA(byte[])
com.commons.support.util.EncryptionUtil: byte[] decodeDes(byte[],java.lang.String)
com.commons.support.util.EncryptionUtil: byte[] encodeDes(byte[],java.lang.String)
com.commons.support.util.FromatUtil: FromatUtil()
com.commons.support.util.FromatUtil: java.lang.String formatDouble(double)
com.commons.support.util.FromatUtil: java.lang.String getSimpleDate(java.util.Date)
com.commons.support.util.FromatUtil: java.lang.String fromatRelativeDate(android.content.Context,java.util.Date)
com.commons.support.util.Utility: Utility()
com.commons.support.util.Utility: boolean isTablet(android.content.Context)
com.commons.support.util.Utility: java.lang.String getSource(android.content.Context)
com.commons.support.util.Utility: boolean containsChinese(java.lang.String)
com.commons.support.util.Utility: boolean isChinese(char)
com.commons.support.util.Utility: boolean isAllChinese(java.lang.String)
com.commons.support.util.Utility: boolean isActivityRunning(java.lang.Class,android.content.Context)
com.commons.support.util.Utility: void startAppWithPackageName(java.lang.String,android.content.Context)
com.commons.support.util.Utility: int dp2Px(android.content.Context,float)
com.commons.support.util.Utility: int px2Dp(android.content.Context,float)
com.commons.support.util.Utility: int getBannerAdHeight(android.content.Context)
com.commons.support.util.Utility: java.lang.String getAppVersionName(android.content.Context)
com.commons.support.util.Utility: int getAppVersionCode(android.content.Context)
com.commons.support.util.Utility: boolean installPkgByFile(android.content.Context,java.lang.String,java.lang.String)
com.commons.support.util.Utility: boolean installPkgByFile(android.content.Context,java.lang.String)
com.commons.support.util.Utility: boolean installPkgByFile(android.content.Context,java.io.File)
com.commons.support.util.Utility: boolean isAppInstalled(android.content.Context,java.lang.String)
com.commons.support.util.Utility: java.lang.String getFromAssets(android.content.Context,java.lang.String)
com.commons.support.util.Utility: void saveObj(java.lang.Object,java.lang.String,android.content.Context)
com.commons.support.util.Utility: java.lang.Object loadObj(java.lang.String,android.content.Context)
com.commons.support.util.Utility: java.lang.Object loadObjWithException(java.lang.String,android.content.Context)
com.commons.support.util.Utility: void serializationOfObject(java.lang.Object,java.io.File)
com.commons.support.util.Utility: java.lang.Object deserializationOfObject(java.io.File)
com.commons.support.util.Utility: android.media.MediaPlayer ring(android.content.Context,java.lang.String)
com.commons.support.util.Utility: void hideKb(android.app.Activity)
com.commons.support.util.Utility: void showKeybord(android.content.Context)
com.commons.support.widget.CircleImageView
com.commons.support.widget.CircleImageView: CircleImageView(android.content.Context)
com.commons.support.widget.CircleImageView: CircleImageView(android.content.Context,android.util.AttributeSet)
com.commons.support.widget.CircleImageView: CircleImageView(android.content.Context,android.util.AttributeSet,int)
com.commons.support.widget.CircleImageView: android.widget.ImageView$ScaleType getScaleType()
com.commons.support.widget.CircleImageView: void setScaleType(android.widget.ImageView$ScaleType)
com.commons.support.widget.CircleImageView: int getBorderColor()
com.commons.support.widget.CircleImageView: void setBorderColor(int)
com.commons.support.widget.CircleImageView: int getBorderWidth()
com.commons.support.widget.CircleImageView: void setBorderWidth(int)
com.commons.support.widget.CircleImageView: void setImageBitmap(android.graphics.Bitmap)
com.commons.support.widget.CircleImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.commons.support.widget.CircleImageView: void setImageResource(int)
com.commons.support.widget.HorizontalListView
com.commons.support.widget.HorizontalListView: HorizontalListView(android.content.Context,android.util.AttributeSet)
com.commons.support.widget.HorizontalListView: android.os.Parcelable onSaveInstanceState()
com.commons.support.widget.HorizontalListView: void onRestoreInstanceState(android.os.Parcelable)
com.commons.support.widget.HorizontalListView: void setDivider(android.graphics.drawable.Drawable)
com.commons.support.widget.HorizontalListView: void setDividerWidth(int)
com.commons.support.widget.HorizontalListView: void setSelection(int)
com.commons.support.widget.HorizontalListView: android.view.View getSelectedView()
com.commons.support.widget.HorizontalListView: void setAdapter(android.widget.ListAdapter)
com.commons.support.widget.HorizontalListView: android.widget.ListAdapter getAdapter()
com.commons.support.widget.HorizontalListView: float getLeftFadingEdgeStrength()
com.commons.support.widget.HorizontalListView: float getRightFadingEdgeStrength()
com.commons.support.widget.HorizontalListView: android.view.View getLeftmostChild()
com.commons.support.widget.HorizontalListView: android.view.View getRightmostChild()
com.commons.support.widget.HorizontalListView: int getRenderHeight()
com.commons.support.widget.HorizontalListView: int getRenderWidth()
com.commons.support.widget.HorizontalListView: void scrollTo(int)
com.commons.support.widget.HorizontalListView: int getFirstVisiblePosition()
com.commons.support.widget.HorizontalListView: int getLastVisiblePosition()
com.commons.support.widget.HorizontalListView: boolean onTouchEvent(android.view.MotionEvent)
com.commons.support.widget.HorizontalListView: void setRunningOutOfDataListener(com.commons.support.widget.HorizontalListView$RunningOutOfDataListener,int)
com.commons.support.widget.HorizontalListView: void setOnClickListener(android.view.View$OnClickListener)
com.commons.support.widget.HorizontalListView: void setOnScrollStateChangedListener(com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener)
com.commons.support.widget.HorizontalListView: void setCurrentScrollState(com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState)
com.commons.support.widget.HorizontalListView: void setAdapter(android.widget.Adapter)
com.commons.support.widget.HorizontalListView: android.widget.Adapter getAdapter()
com.commons.support.widget.HorizontalListView$1: boolean onTouch(android.view.View,android.view.MotionEvent)
com.commons.support.widget.HorizontalListView$2: void onChanged()
com.commons.support.widget.HorizontalListView$2: void onInvalidated()
com.commons.support.widget.HorizontalListView$3: void run()
com.commons.support.widget.HorizontalListView$GestureListener: boolean onDown(android.view.MotionEvent)
com.commons.support.widget.HorizontalListView$GestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)
com.commons.support.widget.HorizontalListView$GestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)
com.commons.support.widget.HorizontalListView$GestureListener: boolean onSingleTapConfirmed(android.view.MotionEvent)
com.commons.support.widget.HorizontalListView$GestureListener: void onLongPress(android.view.MotionEvent)
com.commons.support.widget.HorizontalListView$HoneycombPlus: void setFriction(android.widget.Scroller,float)
com.commons.support.widget.HorizontalListView$IceCreamSandwichPlus: float getCurrVelocity(android.widget.Scroller)
com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener: void onScrollStateChanged(com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState)
com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState
com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState: com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState SCROLL_STATE_IDLE
com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState: com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState SCROLL_STATE_TOUCH_SCROLL
com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState: com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState SCROLL_STATE_FLING
com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState: com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState[] values()
com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState: com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState valueOf(java.lang.String)
com.commons.support.widget.HorizontalListView$OnScrollStateChangedListener$ScrollState: void <clinit>()
com.commons.support.widget.HorizontalListView$RunningOutOfDataListener: void onRunningOutOfData()
com.commons.support.widget.NumberProgressBar
com.commons.support.widget.NumberProgressBar: NumberProgressBar(android.content.Context)
com.commons.support.widget.NumberProgressBar: NumberProgressBar(android.content.Context,android.util.AttributeSet)
com.commons.support.widget.NumberProgressBar: NumberProgressBar(android.content.Context,android.util.AttributeSet,int)
com.commons.support.widget.NumberProgressBar: int getSuggestedMinimumWidth()
com.commons.support.widget.NumberProgressBar: int getSuggestedMinimumHeight()
com.commons.support.widget.NumberProgressBar: int getTextColor()
com.commons.support.widget.NumberProgressBar: float getProgressTextSize()
com.commons.support.widget.NumberProgressBar: int getUnreachedBarColor()
com.commons.support.widget.NumberProgressBar: int getReachedBarColor()
com.commons.support.widget.NumberProgressBar: int getProgress()
com.commons.support.widget.NumberProgressBar: int getMax()
com.commons.support.widget.NumberProgressBar: float getReachedBarHeight()
com.commons.support.widget.NumberProgressBar: float getUnreachedBarHeight()
com.commons.support.widget.NumberProgressBar: void setProgressTextSize(float)
com.commons.support.widget.NumberProgressBar: void setProgressTextColor(int)
com.commons.support.widget.NumberProgressBar: void setUnreachedBarColor(int)
com.commons.support.widget.NumberProgressBar: void setReachedBarColor(int)
com.commons.support.widget.NumberProgressBar: void setMax(int)
com.commons.support.widget.NumberProgressBar: void incrementProgressBy(int)
com.commons.support.widget.NumberProgressBar: void setProgress(int)
com.commons.support.widget.NumberProgressBar: float dp2px(float)
com.commons.support.widget.NumberProgressBar: float sp2px(float)
com.commons.support.widget.NumberProgressBar: void setProgressTextVisibility(com.commons.support.widget.NumberProgressBar$ProgressTextVisibility)
com.commons.support.widget.NumberProgressBar$ProgressTextVisibility
com.commons.support.widget.NumberProgressBar$ProgressTextVisibility: com.commons.support.widget.NumberProgressBar$ProgressTextVisibility Visible
com.commons.support.widget.NumberProgressBar$ProgressTextVisibility: com.commons.support.widget.NumberProgressBar$ProgressTextVisibility Invisible
com.commons.support.widget.NumberProgressBar$ProgressTextVisibility: com.commons.support.widget.NumberProgressBar$ProgressTextVisibility[] values()
com.commons.support.widget.NumberProgressBar$ProgressTextVisibility: com.commons.support.widget.NumberProgressBar$ProgressTextVisibility valueOf(java.lang.String)
com.commons.support.widget.NumberProgressBar$ProgressTextVisibility: void <clinit>()
com.commons.support.widget.ProgressBarCircular
com.commons.support.widget.ProgressBarCircular: ProgressBarCircular(android.content.Context,android.util.AttributeSet)
com.commons.support.widget.ProgressBarCircular: int dpToPx(float,android.content.res.Resources)
com.commons.support.widget.ProgressBarCircular: void setAttributes(android.util.AttributeSet)
com.commons.support.widget.ProgressBarCircular: void setBackgroundColor(int)
com.commons.support.widget.TitleBar
com.commons.support.widget.TitleBar: TitleBar(android.content.Context,android.util.AttributeSet)
com.commons.support.widget.TitleBar: void setLeftButton(int,android.view.View$OnClickListener)
com.commons.support.widget.TitleBar: void setLeftButton(android.view.View$OnClickListener)
com.commons.support.widget.TitleBar: void setRightButton(int,android.view.View$OnClickListener)
com.commons.support.widget.TitleBar: void setRightButton(java.lang.String,android.view.View$OnClickListener)
com.commons.support.widget.TitleBar: void setTitle(java.lang.String)
com.commons.support.widget.TitleBar: void showLeftButton(boolean)
com.commons.support.widget.TitleBar: void showRedDot(boolean)
com.commons.support.widget.TitleBar: void showRightButton(boolean)
com.commons.support.widget.TitleBar: void showTvRightButton(boolean)
com.commons.support.widget.TitleBar$1: void onClick(android.view.View)
